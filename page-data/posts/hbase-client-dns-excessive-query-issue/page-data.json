{
    "componentChunkName": "component---src-templates-blog-post-tsx",
    "path": "/posts/hbase-client-dns-excessive-query-issue/",
    "result": {"data":{"post":{"html":"<h2 id=\"요약\" style=\"position:relative;\"><a href=\"#%EC%9A%94%EC%95%BD\" aria-label=\"요약 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>요약</h2>\n<p>hbase sharded client 1.2에는 hbase.resolve.hostnames.on.failure 옵션이 있다 <br>\n동일 호스트명에 ip가 바뀌어 리전 서버가 투입되는 경우가 없다면 false로 하여 불필요한 dns 질의를 없애자</p>\n<h2 id=\"본문\" style=\"position:relative;\"><a href=\"#%EB%B3%B8%EB%AC%B8\" aria-label=\"본문 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>본문</h2>\n<p>사내에서 제공해주는 hbase 1.2 및 어플리케이션은 hbase sharded client 1.2를 쓰는데, 이전부터 인프라 부서에서 dns 질의가 많다고 연락이 오는 상황이었다 <br>\n확인해보니 관련된 어플리케이션 서버들이 특정 도메인으로 모두 합쳐 초당 10만건 가량 도메인 질의를 발생시키고 있었다 <br>\n왜 이렇게 도메인 질의가 많이 발생한걸까?</p>\n<p>이것저것 삽질을 해보니 원인을 파악할 수 있었다 <br>\n원인은 hbase sharded client 1.1부터 들어간 코드였다(<a href=\"https://issues.apache.org/jira/browse/HBASE-13067\">HBASE-13067</a>) <br>\n리전 서버가 hbase 클러스터에서 하드웨어 이슈로 잠시 제외되었다가 동일 호스트명에 ip가 바뀌어서 투입되면 바뀐 ip를 인지하지 못해 stub key를 구할 때 dns 질의를 하도록 코드가 변경되었다 <br>\n따라서 hbase로 매 요청을 날릴 때마다 요청에 맞는 리전 서버의 스텁을 찾기 위해 stub key를 구하고 이 때마다 dns 질의가 발생했던 것이다 <br>\n1.2에서는 동일 호스트명에 ip가 바뀌는 케이스가 없는 경우에는 불필요한 질의를 막기 위해 hbase.resolve.hostnames.on.failure 옵션을 추가하였다(<a href=\"https://issues.apache.org/jira/browse/HBASE-14544\">HBASE-14544</a>)</p>\n<p>아래는 1.2.12 버전의 org.apache.hadoop.hbase.client.ConnectionManager.HConnectionImplementation 클래스 내 getStubkey 메소드다</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getStubKey</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> serviceName<span class=\"token punctuation\">,</span>\n                             <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> rsHostname<span class=\"token punctuation\">,</span>\n                             <span class=\"token keyword\">int</span> port<span class=\"token punctuation\">,</span>\n                             <span class=\"token keyword\">boolean</span> resolveHostnames<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n      <span class=\"token comment\">// Sometimes, servers go down and they come back up with the same hostname but a different</span>\n      <span class=\"token comment\">// IP address. Force a resolution of the rsHostname by trying to instantiate an</span>\n      <span class=\"token comment\">// InetSocketAddress, and this way we will rightfully get a new stubKey.</span>\n      <span class=\"token comment\">// Also, include the hostname in the key so as to take care of those cases where the</span>\n      <span class=\"token comment\">// DNS name is different but IP address remains the same.</span>\n      <span class=\"token class-name\">String</span> address <span class=\"token operator\">=</span> rsHostname<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>resolveHostnames<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">InetAddress</span> i <span class=\"token operator\">=</span>  <span class=\"token keyword\">new</span> <span class=\"token class-name\">InetSocketAddress</span><span class=\"token punctuation\">(</span>rsHostname<span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAddress</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          address <span class=\"token operator\">=</span> i<span class=\"token punctuation\">.</span><span class=\"token function\">getHostAddress</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"-\"</span> <span class=\"token operator\">+</span> rsHostname<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token keyword\">return</span> serviceName <span class=\"token operator\">+</span> <span class=\"token string\">\"@\"</span> <span class=\"token operator\">+</span> address <span class=\"token operator\">+</span> <span class=\"token string\">\":\"</span> <span class=\"token operator\">+</span> port<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span></code></pre></div>\n<p>하둡 부서에서 리전 서버를 동일 호스트명에 ip를 바꿔 투입하는 경우가 있는지 확인하고, 없는 것을 확인 뒤 hbase.resolve.hostnames.on.failure 옵션을 false로 하는 것을 통해 초당 10만건이 발생하던 쿼리를 초당 몇건 수준으로 내릴 수 있었다</p>\n<p>보통의 경우라면 자바 어플리케이션 단에서 networkaddress.cache.ttl 값을 통해 dns cache를 하거나 혹은 os 단에서 dns cache를 하는 경우가 있다</p>\n<p>그런데 왜 dns 쿼리가 이리 많이 발생했을까? <br>\n사내 환경에서는 MHA(mysql high availability)나 RHA(redis high availability)라고 하여 도메인을 기반으로 한 페일 오버를 하고 있다 <br>\n해당 모듈은 RHA를 사용하고 있어 networkaddress.cache.ttl 값을 0으로 사용하고 있고 os 단에서도 별도 dns cache를 사용하고 있지 않아 사내 도메인 서버로 요청이 과다하게 들어가게 됐다</p>\n<h2 id=\"여담\" style=\"position:relative;\"><a href=\"#%EC%97%AC%EB%8B%B4\" aria-label=\"여담 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>여담</h2>\n<p><a href=\"https://issues.apache.org/jira/browse/HBASE-25292\">HBASE-25292</a>에서는 도메인 질의 관련 InetSocketAddress 로직 개선이 이루어졌다 <br>\n따라서 1.7, 2.5, 3.0와 이후 버전 클라이언트는 위와 같은 dns 과다 질의 이슈가 발생하지 않을 것으로 보인다 <br>\n다만 현재 사용하고 있는 hbase 버전이 1.2이었고, 사내에서 1.6 클라이언트와 1.2 hbase를 사용할 때 메타 정보 관련 이슈가 있어 정상적으로 사용하지 못하는 상황으로 알고 있어 클라이언트 버전을 올리는 것은 고려하지 않았다 <br>\nhbase 버전을 올리는 것은 많은 작업을 동반하기에 먼저 옵션을 건드는 방향으로 접근하였다</p>","excerpt":"요약 hbase sharded client 1.2에는 hbase.resolve.hostnames.on.failure 옵션이 있다  동일 호스트명에 ip가 바뀌어 리전 서버가 투입되는 경우가 없다면 false로 하여 불필요한 dns…","timeToRead":2,"fields":{"slug":"/posts/hbase-client-dns-excessive-query-issue/"},"frontmatter":{"tags":["hbase","hbase-sharded-client","troubleshooting"],"author":{"id":"cprayer","bio":"","twitter":"@fabien0102","avatar":{"children":[{"fixed":{"src":"/static/5d0fd80a1d7df4f6a3adf452cc763c07/b0b39/cprayer.jpg","srcSet":"/static/5d0fd80a1d7df4f6a3adf452cc763c07/b0b39/cprayer.jpg 1x,\n/static/5d0fd80a1d7df4f6a3adf452cc763c07/93542/cprayer.jpg 1.5x,\n/static/5d0fd80a1d7df4f6a3adf452cc763c07/aa4d2/cprayer.jpg 2x"}}]}},"title":"hbase sharded client 1.2 dns 과다 질의 이슈","updatedDate":"Jul 2, 2022","image":null}},"recents":{"edges":[{"node":{"fields":{"slug":"/posts/k8s-and-etc-resolv-conf/"},"timeToRead":4,"frontmatter":{"title":"k8s와 /etc/resolv.conf","image":null,"author":{"id":"cprayer","avatar":{"children":[{"fixed":{"src":"/static/5d0fd80a1d7df4f6a3adf452cc763c07/6d45f/cprayer.jpg","srcSet":"/static/5d0fd80a1d7df4f6a3adf452cc763c07/6d45f/cprayer.jpg 1x,\n/static/5d0fd80a1d7df4f6a3adf452cc763c07/fe190/cprayer.jpg 1.5x,\n/static/5d0fd80a1d7df4f6a3adf452cc763c07/3e51d/cprayer.jpg 2x"}}]}}}}},{"node":{"fields":{"slug":"/posts/redis-manually-force-a-failover/"},"timeToRead":1,"frontmatter":{"title":"강제로 레플리카 레디스를 마스터로 승격시키기","image":null,"author":{"id":"cprayer","avatar":{"children":[{"fixed":{"src":"/static/5d0fd80a1d7df4f6a3adf452cc763c07/6d45f/cprayer.jpg","srcSet":"/static/5d0fd80a1d7df4f6a3adf452cc763c07/6d45f/cprayer.jpg 1x,\n/static/5d0fd80a1d7df4f6a3adf452cc763c07/fe190/cprayer.jpg 1.5x,\n/static/5d0fd80a1d7df4f6a3adf452cc763c07/3e51d/cprayer.jpg 2x"}}]}}}}},{"node":{"fields":{"slug":"/posts/redis-lettuce-client-extended-keepalive/"},"timeToRead":2,"frontmatter":{"title":"redis lettuce client extended keepalive 옵션","image":null,"author":{"id":"cprayer","avatar":{"children":[{"fixed":{"src":"/static/5d0fd80a1d7df4f6a3adf452cc763c07/6d45f/cprayer.jpg","srcSet":"/static/5d0fd80a1d7df4f6a3adf452cc763c07/6d45f/cprayer.jpg 1x,\n/static/5d0fd80a1d7df4f6a3adf452cc763c07/fe190/cprayer.jpg 1.5x,\n/static/5d0fd80a1d7df4f6a3adf452cc763c07/3e51d/cprayer.jpg 2x"}}]}}}}},{"node":{"fields":{"slug":"/posts/dbcp2-communication-exception-issue/"},"timeToRead":4,"frontmatter":{"title":"dbcp2 pool idle configuration이 있는데도 communicationsException 발생 원인 파악","image":null,"author":{"id":"cprayer","avatar":{"children":[{"fixed":{"src":"/static/5d0fd80a1d7df4f6a3adf452cc763c07/6d45f/cprayer.jpg","srcSet":"/static/5d0fd80a1d7df4f6a3adf452cc763c07/6d45f/cprayer.jpg 1x,\n/static/5d0fd80a1d7df4f6a3adf452cc763c07/fe190/cprayer.jpg 1.5x,\n/static/5d0fd80a1d7df4f6a3adf452cc763c07/3e51d/cprayer.jpg 2x"}}]}}}}}]}},"pageContext":{"slug":"/posts/hbase-client-dns-excessive-query-issue/"}},
    "staticQueryHashes": []}