{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/posts/about-availability-probes-auto-configuration/","result":{"data":{"post":{"html":"<h2 id=\"서두\" style=\"position:relative;\"><a href=\"#%EC%84%9C%EB%91%90\" aria-label=\"서두 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>서두</h2>\n<p>spring boot에서는 2.3부터 컨테이너 헬스 체크를 위한 probe 관련 엔드포인트를 노출합니다. (<a href=\"https://docs.spring.io/spring-boot/docs/2.3.0.RELEASE/reference/html/production-ready-features.html#production-ready-kubernetes-probes\">링크</a>)</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">livenessProbe</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">httpGet</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> /actuator/health/liveness\n    <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> liveness<span class=\"token punctuation\">-</span>port\n  <span class=\"token key atrule\">failureThreshold</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">...</span>\n  <span class=\"token key atrule\">periodSeconds</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">...</span>\n\n<span class=\"token key atrule\">readinessProbe</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">httpGet</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> /actuator/health/readiness\n    <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> liveness<span class=\"token punctuation\">-</span>port\n  <span class=\"token key atrule\">failureThreshold</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">...</span>\n  <span class=\"token key atrule\">periodSeconds</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">...</span></code></pre></div>\n<p>별도 프로퍼티 설정 없이 해당 기능을 잘 사용하고 있었는데요. 배포 직후 첫 번째 probe를 시도할 때 간헐적으로 타임아웃이 발생하는 문제가 발생하여 알림이 오는 경우가 있었습니다.\n그래서 해당 원인이 무엇인지 분석하기 위해 동일한 어플리케이션을 로컬에서 구동시킨 후, 해당 엔드포인트에 요청을 보냈더니 404 에러를 보게 되었습니다.</p>\n<p>쿠버네티스의 경우 200 이상 399 이하의 http status code가 반환되는 경우에만 정상적인 상태라고 인식합니다. (<a href=\"https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-a-liveness-http-request\">링크</a>)</p>\n<blockquote>\n<p>Any code greater than or equal to 200 and less than 400 indicates success. Any other code indicates failure.</p>\n</blockquote>\n<p>즉, 쿠버네티스 클러스터 내에서도 404 에러가 발생했다면 readiness / liveness health check 실패로 인해 정상 배포가 되지 않았을텐데요. <br>\n첫 요청이 간헐적으로 실패하는 문제를 제외하고는 정상적으로 동작하고 있었습니다.</p>\n<blockquote>\n<p>Spring Boot manages your Application Availability State out-of-the-box. If deployed in a Kubernetes environment, actuator will gather the \"Liveness\" and \"Readiness\" information from the ApplicationAvailability interface and use that information in dedicated Health Indicators: LivenessStateHealthIndicator and ReadinessStateHealthIndicator. These indicators will be shown on the global health endpoint (\"/actuator/health\"). They will also be exposed as separate HTTP Probes using Health Groups: \"/actuator/health/liveness\" and \"/actuator/health/readiness\".</p>\n</blockquote>\n<p>위의 링크가 걸린 스프링 부트 문서 아래를 보면 다음과 같이 쿠버네티스 환경인 경우에는 readiness, readiness에 필요한 정보를 수집하고 엔드포인트를 수집한다고 나와 있습니다. <br>\n그렇다면 어떤 환경일 때 어떻게 등록되는걸까요? 관련된 정보를 찾던 도중 AvailablityProbesAutoConfiguration을 찾게 되었습니다.</p>\n<h2 id=\"availabilityprobesautoconfiguration-코드를-확인해보자\" style=\"position:relative;\"><a href=\"#availabilityprobesautoconfiguration-%EC%BD%94%EB%93%9C%EB%A5%BC-%ED%99%95%EC%9D%B8%ED%95%B4%EB%B3%B4%EC%9E%90\" aria-label=\"availabilityprobesautoconfiguration 코드를 확인해보자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>AvailabilityProbesAutoConfiguration 코드를 확인해보자</h2>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Configuration</span><span class=\"token punctuation\">(</span>proxyBeanMethods <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span>\n<span class=\"token annotation punctuation\">@Conditional</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">AvailabilityProbesAutoConfiguration<span class=\"token punctuation\">.</span>ProbesCondition</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span>\n<span class=\"token annotation punctuation\">@AutoConfigureAfter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token class-name\">AvailabilityHealthContributorAutoConfiguration</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span>\n        <span class=\"token class-name\">ApplicationAvailabilityAutoConfiguration</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AvailabilityProbesAutoConfiguration</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token annotation punctuation\">@Bean</span>\n    <span class=\"token annotation punctuation\">@ConditionalOnMissingBean</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"livenessStateHealthIndicator\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">LivenessStateHealthIndicator</span> <span class=\"token function\">livenessStateHealthIndicator</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ApplicationAvailability</span> applicationAvailability<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">LivenessStateHealthIndicator</span><span class=\"token punctuation\">(</span>applicationAvailability<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Bean</span>\n    <span class=\"token annotation punctuation\">@ConditionalOnMissingBean</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"readinessStateHealthIndicator\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ReadinessStateHealthIndicator</span> <span class=\"token function\">readinessStateHealthIndicator</span><span class=\"token punctuation\">(</span>\n            <span class=\"token class-name\">ApplicationAvailability</span> applicationAvailability<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ReadinessStateHealthIndicator</span><span class=\"token punctuation\">(</span>applicationAvailability<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Bean</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">AvailabilityProbesHealthEndpointGroupsPostProcessor</span> <span class=\"token function\">availabilityProbesHealthEndpointGroupsPostProcessor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AvailabilityProbesHealthEndpointGroupsPostProcessor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token comment\">//...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>AvailabilityProbesAutoConfiguration은 위와 같이 Conditional 어노테이션을 가지고 있습니다. 해당 어노테이션 내에 정의된 ProbesCondition은 AvailabilityProbesAutoConfiguration 클래스 내에 static nested class로 정의되어 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">static</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ProbesCondition</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">SpringBootCondition</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> <span class=\"token constant\">ENABLED_PROPERTY</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"management.endpoint.health.probes.enabled\"</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> <span class=\"token constant\">DEPRECATED_ENABLED_PROPERTY</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"management.health.probes.enabled\"</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ConditionOutcome</span> <span class=\"token function\">getMatchOutcome</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ConditionContext</span> context<span class=\"token punctuation\">,</span> <span class=\"token class-name\">AnnotatedTypeMetadata</span> metadata<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">Environment</span> environment <span class=\"token operator\">=</span> context<span class=\"token punctuation\">.</span><span class=\"token function\">getEnvironment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">ConditionMessage<span class=\"token punctuation\">.</span>Builder</span> message <span class=\"token operator\">=</span> <span class=\"token class-name\">ConditionMessage</span><span class=\"token punctuation\">.</span><span class=\"token function\">forCondition</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Probes availability\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">ConditionOutcome</span> outcome <span class=\"token operator\">=</span> <span class=\"token function\">onProperty</span><span class=\"token punctuation\">(</span>environment<span class=\"token punctuation\">,</span> message<span class=\"token punctuation\">,</span> <span class=\"token constant\">ENABLED_PROPERTY</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>outcome <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> outcome<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        outcome <span class=\"token operator\">=</span> <span class=\"token function\">onProperty</span><span class=\"token punctuation\">(</span>environment<span class=\"token punctuation\">,</span> message<span class=\"token punctuation\">,</span> <span class=\"token constant\">DEPRECATED_ENABLED_PROPERTY</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>outcome <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> outcome<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">CloudPlatform</span><span class=\"token punctuation\">.</span><span class=\"token function\">getActive</span><span class=\"token punctuation\">(</span>environment<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token class-name\">CloudPlatform</span><span class=\"token punctuation\">.</span><span class=\"token constant\">KUBERNETES</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// 주목!</span>\n            <span class=\"token keyword\">return</span> <span class=\"token class-name\">ConditionOutcome</span><span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">.</span><span class=\"token function\">because</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"running on Kubernetes\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> <span class=\"token class-name\">ConditionOutcome</span><span class=\"token punctuation\">.</span><span class=\"token function\">noMatch</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">.</span><span class=\"token function\">because</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"not running on a supported cloud platform\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">ConditionOutcome</span> <span class=\"token function\">onProperty</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Environment</span> environment<span class=\"token punctuation\">,</span> <span class=\"token class-name\">ConditionMessage<span class=\"token punctuation\">.</span>Builder</span> message<span class=\"token punctuation\">,</span>\n                                        <span class=\"token class-name\">String</span> propertyName<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">String</span> enabled <span class=\"token operator\">=</span> environment<span class=\"token punctuation\">.</span><span class=\"token function\">getProperty</span><span class=\"token punctuation\">(</span>propertyName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>enabled <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">boolean</span> match <span class=\"token operator\">=</span> <span class=\"token operator\">!</span><span class=\"token string\">\"false\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">equalsIgnoreCase</span><span class=\"token punctuation\">(</span>enabled<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ConditionOutcome</span><span class=\"token punctuation\">(</span>match<span class=\"token punctuation\">,</span> message<span class=\"token punctuation\">.</span><span class=\"token function\">because</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"'\"</span> <span class=\"token operator\">+</span> propertyName <span class=\"token operator\">+</span> <span class=\"token string\">\"' set to '\"</span> <span class=\"token operator\">+</span> enabled <span class=\"token operator\">+</span> <span class=\"token string\">\"'\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>해당 소스 코드를 보면 먼저 management.endpoint.health.probes.enabled 프로퍼티와 management.health.probes.enabled 값이 false 이외의 값으로 설정되어 있는지 확인합니다.\n그 후 <strong>CloudPlatform.getActive(environment) == CloudPlatform.KUBERNETES</strong> 인지 확인하는 로직이 있습니다. 해당 부분을 좀 더 확인해보겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">enum</span> <span class=\"token class-name\">CloudPlatform</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token constant\">NONE</span> <span class=\"token punctuation\">{</span>\n\n        <span class=\"token annotation punctuation\">@Override</span>\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">isDetected</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Environment</span> environment<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    \n    <span class=\"token comment\">//...</span>\n\n    <span class=\"token constant\">KUBERNETES</span> <span class=\"token punctuation\">{</span>\n\n        <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> <span class=\"token constant\">KUBERNETES_SERVICE_HOST</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"KUBERNETES_SERVICE_HOST\"</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> <span class=\"token constant\">KUBERNETES_SERVICE_PORT</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"KUBERNETES_SERVICE_PORT\"</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> <span class=\"token constant\">SERVICE_HOST_SUFFIX</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"_SERVICE_HOST\"</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> <span class=\"token constant\">SERVICE_PORT_SUFFIX</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"_SERVICE_PORT\"</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token annotation punctuation\">@Override</span>\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">isDetected</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Environment</span> environment<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>environment <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">ConfigurableEnvironment</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">return</span> <span class=\"token function\">isAutoDetected</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ConfigurableEnvironment</span><span class=\"token punctuation\">)</span> environment<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">private</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">isAutoDetected</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ConfigurableEnvironment</span> environment<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\">PropertySource</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span></span> environmentPropertySource <span class=\"token operator\">=</span> environment<span class=\"token punctuation\">.</span><span class=\"token function\">getPropertySources</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">StandardEnvironment</span><span class=\"token punctuation\">.</span><span class=\"token constant\">SYSTEM_ENVIRONMENT_PROPERTY_SOURCE_NAME</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>environmentPropertySource <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>environmentPropertySource<span class=\"token punctuation\">.</span><span class=\"token function\">containsProperty</span><span class=\"token punctuation\">(</span><span class=\"token constant\">KUBERNETES_SERVICE_HOST</span><span class=\"token punctuation\">)</span>\n                        <span class=\"token operator\">&amp;&amp;</span> environmentPropertySource<span class=\"token punctuation\">.</span><span class=\"token function\">containsProperty</span><span class=\"token punctuation\">(</span><span class=\"token constant\">KUBERNETES_SERVICE_PORT</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>environmentPropertySource <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">EnumerablePropertySource</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token keyword\">return</span> <span class=\"token function\">isAutoDetected</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">EnumerablePropertySource</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">)</span> environmentPropertySource<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">private</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">isAutoDetected</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">EnumerablePropertySource</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span></span> environmentPropertySource<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> propertyName <span class=\"token operator\">:</span> environmentPropertySource<span class=\"token punctuation\">.</span><span class=\"token function\">getPropertyNames</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>propertyName<span class=\"token punctuation\">.</span><span class=\"token function\">endsWith</span><span class=\"token punctuation\">(</span><span class=\"token constant\">SERVICE_HOST_SUFFIX</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token class-name\">String</span> serviceName <span class=\"token operator\">=</span> propertyName<span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n                            propertyName<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token constant\">SERVICE_HOST_SUFFIX</span><span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>environmentPropertySource<span class=\"token punctuation\">.</span><span class=\"token function\">getProperty</span><span class=\"token punctuation\">(</span>serviceName <span class=\"token operator\">+</span> <span class=\"token constant\">SERVICE_PORT_SUFFIX</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token comment\">//...</span>\n    \n    <span class=\"token comment\">/**\n     * Returns the active {@link CloudPlatform} or {@code null} if one is not active.\n     * @param environment the environment\n     * @return the {@link CloudPlatform} or {@code null}\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">CloudPlatform</span> <span class=\"token function\">getActive</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Environment</span> environment<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>environment <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">CloudPlatform</span> cloudPlatform <span class=\"token operator\">:</span> <span class=\"token function\">values</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>cloudPlatform<span class=\"token punctuation\">.</span><span class=\"token function\">isActive</span><span class=\"token punctuation\">(</span>environment<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token keyword\">return</span> cloudPlatform<span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * Determines if the platform is active (i.e. the application is running in it).\n     * @param environment the environment\n     * @return if the platform is active.\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">isActive</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Environment</span> environment<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">isEnforced</span><span class=\"token punctuation\">(</span>environment<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token function\">isDetected</span><span class=\"token punctuation\">(</span>environment<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * Determines if the platform is enforced by looking at the\n     * {@code \"spring.main.cloud-platform\"} configuration property.\n     * @param environment the environment\n     * @return if the platform is enforced\n     * @since 2.3.0\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">isEnforced</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Environment</span> environment<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">isEnforced</span><span class=\"token punctuation\">(</span>environment<span class=\"token punctuation\">.</span><span class=\"token function\">getProperty</span><span class=\"token punctuation\">(</span><span class=\"token constant\">PROPERTY_NAME</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * Determines if the platform is detected by looking for platform-specific environment\n     * variables.\n     * @param environment the environment\n     * @return if the platform is auto-detected.\n     * @since 2.3.0\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">abstract</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">isDetected</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Environment</span> environment<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>(메소드 순서를 변경하거나 일부 enum, 메소드를 생략하였습니다.)</p>\n<p>다음과 같이 CloudPlatform은 enum으로 선언되어 있고, getActive 메소드는 isActive 메소드를 통해 spring.main.cloud-platform 프로퍼티를 통해 특정 클라우드 플랫폼으로 강제되었는지(isEnforced), 혹은 특정 클라우드 플랫폼 환경에만 존재하는 환경 변수(isDetected) 여부를 파악하여 현재 사용하는 클라우드 플랫폼을 결정합니다.</p>\n<p>isDetected 메소드의 경우 추상 메소드로 정의되어 있는데요. 이는 각 enum 필드마다 override하여 각자 자기의 클라우드 플랫폼인지 여부를 detect합니다.</p>\n<p>쿠버네티스 플랫폼의 경우 <code class=\"language-text\">KUBERNETES_SERVICE_HOST</code>, <code class=\"language-text\">KUBERNETES_SERVICE_PORT</code> 환경 변수가 존재하는지, environmentPropertySource가 순회 가능하다면 <code class=\"language-text\">A_SERVICE_HOST</code>, <code class=\"language-text\">A_SERVICE_PORT</code>처럼 동일한 이름에 <code class=\"language-text\">_SERVICE_HOST</code>, <code class=\"language-text\">_SERVICE_PORT</code>를 접미사로 가지는 환경변수가 존재하는지 여부로 판단합니다.</p>\n<h2 id=\"정리-및-결론\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EB%A6%AC-%EB%B0%8F-%EA%B2%B0%EB%A1%A0\" aria-label=\"정리 및 결론 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정리 및 결론</h2>\n<ul>\n<li>Conditional 어노테이션을 달고 있는 auto configuration 클래스는 Conditional 어노테이션에 등록된 condition 클래스의 matches 메소드가 참을 반환하면 해당 configuration 클래스 내의 빈을 등록하고 아니라면 등록하지 않습니다.</li>\n<li>쿠버네티스 환경인 경우 자동적으로 /actuator/health/liveness, /actuator/health/readiness 엔드포인트가 활성화됩니다.</li>\n<li>로컬에서도 활성화시키고 싶은 경우 management.endpoint.health.probes.enabled 프로퍼티의 값을 true로 설정해주시면 됩니다. (false 이외의 값이라면 뭐든지 가능합니다)</li>\n<li>간헐적으로 타임아웃이 발생한 원인은 timeout second가 타이트하여 발생했던 것으로 추정됩니다. (default 1초) 현재는 이와 같은 문제가 발생하지 않는데요. 관련해서는 추후 더 알아볼 예정입니다.</li>\n</ul>","excerpt":"서두 spring boot에서는 2.3부터 컨테이너 헬스 체크를 위한 probe 관련 엔드포인트를 노출합니다. (링크) 별도 프로퍼티 설정 없이 해당 기능을 잘 사용하고 있었는데요. 배포 직후 첫 번째 probe…","timeToRead":5,"fields":{"slug":"/posts/about-availability-probes-auto-configuration/"},"frontmatter":{"tags":["spring-boot","troubleshooting","k8s-probe"],"author":{"jsonId":"cprayer","bio":"","twitter":"@fabien0102","avatar":{"children":[{"fixed":{"src":"/static/5d0fd80a1d7df4f6a3adf452cc763c07/b0b39/cprayer.jpg","srcSet":"/static/5d0fd80a1d7df4f6a3adf452cc763c07/b0b39/cprayer.jpg 1x,\n/static/5d0fd80a1d7df4f6a3adf452cc763c07/93542/cprayer.jpg 1.5x,\n/static/5d0fd80a1d7df4f6a3adf452cc763c07/aa4d2/cprayer.jpg 2x"}}]}},"title":"AvailablityProbesAutoConfiguration에 대해 알아보자(spring boot readiness, liveness 관련)","updatedDate":"Apr 11, 2021","image":null}},"recents":{"edges":[{"node":{"fields":{"slug":"/posts/k8s-and-etc-resolv-conf/"},"timeToRead":4,"frontmatter":{"title":"k8s와 /etc/resolv.conf","image":null,"author":{"jsonId":"cprayer","avatar":{"children":[{"fixed":{"src":"/static/5d0fd80a1d7df4f6a3adf452cc763c07/6d45f/cprayer.jpg","srcSet":"/static/5d0fd80a1d7df4f6a3adf452cc763c07/6d45f/cprayer.jpg 1x,\n/static/5d0fd80a1d7df4f6a3adf452cc763c07/fe190/cprayer.jpg 1.5x,\n/static/5d0fd80a1d7df4f6a3adf452cc763c07/3e51d/cprayer.jpg 2x"}}]}}}}},{"node":{"fields":{"slug":"/posts/redis-manually-force-a-failover/"},"timeToRead":1,"frontmatter":{"title":"강제로 레플리카 레디스를 마스터로 승격시키기","image":null,"author":{"jsonId":"cprayer","avatar":{"children":[{"fixed":{"src":"/static/5d0fd80a1d7df4f6a3adf452cc763c07/6d45f/cprayer.jpg","srcSet":"/static/5d0fd80a1d7df4f6a3adf452cc763c07/6d45f/cprayer.jpg 1x,\n/static/5d0fd80a1d7df4f6a3adf452cc763c07/fe190/cprayer.jpg 1.5x,\n/static/5d0fd80a1d7df4f6a3adf452cc763c07/3e51d/cprayer.jpg 2x"}}]}}}}},{"node":{"fields":{"slug":"/posts/hbase-client-dns-excessive-query-issue/"},"timeToRead":2,"frontmatter":{"title":"hbase sharded client 1.2 dns 과다 질의 이슈","image":null,"author":{"jsonId":"cprayer","avatar":{"children":[{"fixed":{"src":"/static/5d0fd80a1d7df4f6a3adf452cc763c07/6d45f/cprayer.jpg","srcSet":"/static/5d0fd80a1d7df4f6a3adf452cc763c07/6d45f/cprayer.jpg 1x,\n/static/5d0fd80a1d7df4f6a3adf452cc763c07/fe190/cprayer.jpg 1.5x,\n/static/5d0fd80a1d7df4f6a3adf452cc763c07/3e51d/cprayer.jpg 2x"}}]}}}}},{"node":{"fields":{"slug":"/posts/redis-lettuce-client-extended-keepalive/"},"timeToRead":2,"frontmatter":{"title":"redis lettuce client extended keepalive 옵션","image":null,"author":{"jsonId":"cprayer","avatar":{"children":[{"fixed":{"src":"/static/5d0fd80a1d7df4f6a3adf452cc763c07/6d45f/cprayer.jpg","srcSet":"/static/5d0fd80a1d7df4f6a3adf452cc763c07/6d45f/cprayer.jpg 1x,\n/static/5d0fd80a1d7df4f6a3adf452cc763c07/fe190/cprayer.jpg 1.5x,\n/static/5d0fd80a1d7df4f6a3adf452cc763c07/3e51d/cprayer.jpg 2x"}}]}}}}}]}},"pageContext":{"slug":"/posts/about-availability-probes-auto-configuration/"}},"staticQueryHashes":[]}