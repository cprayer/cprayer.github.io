{"version":3,"file":"9553fe60f1f13953eb8debbed396b610acd99d8b-30e2dda00283e27bb36e.js","mappings":"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","sources":["webpack://cprayer-blog/./src/components/PostHeader.tsx","webpack://cprayer-blog/./node_modules/semantic-ui-react/dist/es/elements/List/ListDescription.js","webpack://cprayer-blog/./node_modules/semantic-ui-react/dist/es/elements/List/ListHeader.js","webpack://cprayer-blog/./node_modules/semantic-ui-react/dist/es/elements/List/ListContent.js","webpack://cprayer-blog/./node_modules/semantic-ui-react/dist/es/elements/List/ListIcon.js","webpack://cprayer-blog/./node_modules/semantic-ui-react/dist/es/elements/List/ListItem.js","webpack://cprayer-blog/./node_modules/semantic-ui-react/dist/es/elements/List/ListList.js","webpack://cprayer-blog/./node_modules/semantic-ui-react/dist/es/elements/List/List.js","webpack://cprayer-blog/./src/components/TagsCard/TagsCard.tsx","webpack://cprayer-blog/./node_modules/lodash-es/times.js","webpack://cprayer-blog/./src/components/BlogPagination/BlogPagination.tsx","webpack://cprayer-blog/./src/pages/index.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { Header, Segment } from \"semantic-ui-react\";\n\nexport default () => {\n  return (\n    <Segment vertical>\n      <Header as=\"h2\">\n        <Header.Content>Posts</Header.Content>\n      </Header>\n    </Segment>\n  );\n};\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * A list item can contain a description.\n */\n\nfunction ListDescription(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx(className, 'description');\n  var rest = getUnhandledProps(ListDescription, props);\n  var ElementType = getElementType(ListDescription, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nListDescription.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nListDescription.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nListDescription.create = createShorthandFactory(ListDescription, function (content) {\n  return {\n    content: content\n  };\n});\nexport default ListDescription;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * A list item can contain a header.\n */\n\nfunction ListHeader(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('header', className);\n  var rest = getUnhandledProps(ListHeader, props);\n  var ElementType = getElementType(ListHeader, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nListHeader.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nListHeader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nListHeader.create = createShorthandFactory(ListHeader, function (content) {\n  return {\n    content: content\n  };\n});\nexport default ListHeader;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps, SUI, useValueAndKey, useVerticalAlignProp } from '../../lib';\nimport ListDescription from './ListDescription';\nimport ListHeader from './ListHeader';\n/**\n * A list item can contain a content.\n */\n\nfunction ListContent(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      description = props.description,\n      floated = props.floated,\n      header = props.header,\n      verticalAlign = props.verticalAlign;\n  var classes = cx(useValueAndKey(floated, 'floated'), useVerticalAlignProp(verticalAlign), 'content', className);\n  var rest = getUnhandledProps(ListContent, props);\n  var ElementType = getElementType(ListContent, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), ListHeader.create(header), ListDescription.create(description), content);\n}\n\nListContent.handledProps = [\"as\", \"children\", \"className\", \"content\", \"description\", \"floated\", \"header\", \"verticalAlign\"];\nListContent.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Shorthand for ListDescription. */\n  description: customPropTypes.itemShorthand,\n\n  /** An list content can be floated left or right. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n\n  /** Shorthand for ListHeader. */\n  header: customPropTypes.itemShorthand,\n\n  /** An element inside a list can be vertically aligned. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS)\n} : {};\nListContent.create = createShorthandFactory(ListContent, function (content) {\n  return {\n    content: content\n  };\n});\nexport default ListContent;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { createShorthandFactory, getUnhandledProps, SUI, useVerticalAlignProp } from '../../lib';\nimport Icon from '../Icon/Icon';\n/**\n * A list item can contain an icon.\n */\n\nfunction ListIcon(props) {\n  var className = props.className,\n      verticalAlign = props.verticalAlign;\n  var classes = cx(useVerticalAlignProp(verticalAlign), className);\n  var rest = getUnhandledProps(ListIcon, props);\n  return /*#__PURE__*/React.createElement(Icon, _extends({}, rest, {\n    className: classes\n  }));\n}\n\nListIcon.handledProps = [\"className\", \"verticalAlign\"];\nListIcon.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** An element inside a list can be vertically aligned. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS)\n} : {};\nListIcon.create = createShorthandFactory(ListIcon, function (name) {\n  return {\n    name: name\n  };\n});\nexport default ListIcon;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _isPlainObject from \"lodash-es/isPlainObject\";\nimport _invoke from \"lodash-es/invoke\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { Component, isValidElement } from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps, useKeyOnly } from '../../lib';\nimport Image from '../Image';\nimport ListContent from './ListContent';\nimport ListDescription from './ListDescription';\nimport ListHeader from './ListHeader';\nimport ListIcon from './ListIcon';\n/**\n * A list item can contain a set of items.\n */\n\nvar ListItem = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(ListItem, _Component);\n\n  function ListItem() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n\n    _this.handleClick = function (e) {\n      var disabled = _this.props.disabled;\n      if (!disabled) _invoke(_this.props, 'onClick', e, _this.props);\n    };\n\n    return _this;\n  }\n\n  var _proto = ListItem.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        active = _this$props.active,\n        children = _this$props.children,\n        className = _this$props.className,\n        content = _this$props.content,\n        description = _this$props.description,\n        disabled = _this$props.disabled,\n        header = _this$props.header,\n        icon = _this$props.icon,\n        image = _this$props.image,\n        value = _this$props.value;\n    var ElementType = getElementType(ListItem, this.props);\n    var classes = cx(useKeyOnly(active, 'active'), useKeyOnly(disabled, 'disabled'), useKeyOnly(ElementType !== 'li', 'item'), className);\n    var rest = getUnhandledProps(ListItem, this.props);\n    var valueProp = ElementType === 'li' ? {\n      value: value\n    } : {\n      'data-value': value\n    };\n\n    if (!childrenUtils.isNil(children)) {\n      return /*#__PURE__*/React.createElement(ElementType, _extends({}, valueProp, {\n        role: \"listitem\",\n        className: classes,\n        onClick: this.handleClick\n      }, rest), children);\n    }\n\n    var iconElement = ListIcon.create(icon, {\n      autoGenerateKey: false\n    });\n    var imageElement = Image.create(image, {\n      autoGenerateKey: false\n    }); // See description of `content` prop for explanation about why this is necessary.\n\n    if (! /*#__PURE__*/isValidElement(content) && _isPlainObject(content)) {\n      return /*#__PURE__*/React.createElement(ElementType, _extends({}, valueProp, {\n        role: \"listitem\",\n        className: classes,\n        onClick: this.handleClick\n      }, rest), iconElement || imageElement, ListContent.create(content, {\n        autoGenerateKey: false,\n        defaultProps: {\n          header: header,\n          description: description\n        }\n      }));\n    }\n\n    var headerElement = ListHeader.create(header, {\n      autoGenerateKey: false\n    });\n    var descriptionElement = ListDescription.create(description, {\n      autoGenerateKey: false\n    });\n\n    if (iconElement || imageElement) {\n      return /*#__PURE__*/React.createElement(ElementType, _extends({}, valueProp, {\n        role: \"listitem\",\n        className: classes,\n        onClick: this.handleClick\n      }, rest), iconElement || imageElement, (content || headerElement || descriptionElement) && /*#__PURE__*/React.createElement(ListContent, null, headerElement, descriptionElement, content));\n    }\n\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, valueProp, {\n      role: \"listitem\",\n      className: classes,\n      onClick: this.handleClick\n    }, rest), headerElement, descriptionElement, content);\n  };\n\n  return ListItem;\n}(Component);\n\nListItem.handledProps = [\"active\", \"as\", \"children\", \"className\", \"content\", \"description\", \"disabled\", \"header\", \"icon\", \"image\", \"onClick\", \"value\"];\nListItem.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A list item can active. */\n  active: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /**\n   * Shorthand for primary content.\n   *\n   * Heads up!\n   *\n   * This is handled slightly differently than the typical `content` prop since\n   * the wrapping ListContent is not used when there's no icon or image.\n   *\n   * If you pass content as:\n   * - an element/literal, it's treated as the sibling node to\n   * header/description (whether wrapped in Item.Content or not).\n   * - a props object, it forces the presence of Item.Content and passes those\n   * props to it. If you pass a content prop within that props object, it\n   * will be treated as the sibling node to header/description.\n   */\n  content: customPropTypes.itemShorthand,\n\n  /** Shorthand for ListDescription. */\n  description: customPropTypes.itemShorthand,\n\n  /** A list item can disabled. */\n  disabled: PropTypes.bool,\n\n  /** Shorthand for ListHeader. */\n  header: customPropTypes.itemShorthand,\n\n  /** Shorthand for ListIcon. */\n  icon: customPropTypes.every([customPropTypes.disallow(['image']), customPropTypes.itemShorthand]),\n\n  /** Shorthand for Image. */\n  image: customPropTypes.every([customPropTypes.disallow(['icon']), customPropTypes.itemShorthand]),\n\n  /** A ListItem can be clicked */\n  onClick: PropTypes.func,\n\n  /** A value for an ordered list. */\n  value: PropTypes.string\n} : {};\nListItem.create = createShorthandFactory(ListItem, function (content) {\n  return {\n    content: content\n  };\n});\nexport default ListItem;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, useKeyOnly } from '../../lib';\n/**\n * A list can contain a sub list.\n */\n\nfunction ListList(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var rest = getUnhandledProps(ListList, props);\n  var ElementType = getElementType(ListList, props);\n  var classes = cx(useKeyOnly(ElementType !== 'ul' && ElementType !== 'ol', 'list'), className);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nListList.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nListList.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nexport default ListList;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _map from \"lodash-es/map\";\nimport _invoke from \"lodash-es/invoke\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey, useValueAndKey, useVerticalAlignProp } from '../../lib';\nimport ListContent from './ListContent';\nimport ListDescription from './ListDescription';\nimport ListHeader from './ListHeader';\nimport ListIcon from './ListIcon';\nimport ListItem from './ListItem';\nimport ListList from './ListList';\n/**\n * A list groups related content.\n */\n\nvar List = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(List, _Component);\n\n  function List() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n\n    _this.handleItemOverrides = function (predefinedProps) {\n      return {\n        onClick: function onClick(e, itemProps) {\n          _invoke(predefinedProps, 'onClick', e, itemProps);\n\n          _invoke(_this.props, 'onItemClick', e, itemProps);\n        }\n      };\n    };\n\n    return _this;\n  }\n\n  var _proto = List.prototype;\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    var _this$props = this.props,\n        animated = _this$props.animated,\n        bulleted = _this$props.bulleted,\n        celled = _this$props.celled,\n        children = _this$props.children,\n        className = _this$props.className,\n        content = _this$props.content,\n        divided = _this$props.divided,\n        floated = _this$props.floated,\n        horizontal = _this$props.horizontal,\n        inverted = _this$props.inverted,\n        items = _this$props.items,\n        link = _this$props.link,\n        ordered = _this$props.ordered,\n        relaxed = _this$props.relaxed,\n        selection = _this$props.selection,\n        size = _this$props.size,\n        verticalAlign = _this$props.verticalAlign;\n    var classes = cx('ui', size, useKeyOnly(animated, 'animated'), useKeyOnly(bulleted, 'bulleted'), useKeyOnly(celled, 'celled'), useKeyOnly(divided, 'divided'), useKeyOnly(horizontal, 'horizontal'), useKeyOnly(inverted, 'inverted'), useKeyOnly(link, 'link'), useKeyOnly(ordered, 'ordered'), useKeyOnly(selection, 'selection'), useKeyOrValueAndKey(relaxed, 'relaxed'), useValueAndKey(floated, 'floated'), useVerticalAlignProp(verticalAlign), 'list', className);\n    var rest = getUnhandledProps(List, this.props);\n    var ElementType = getElementType(List, this.props);\n\n    if (!childrenUtils.isNil(children)) {\n      return /*#__PURE__*/React.createElement(ElementType, _extends({\n        role: \"list\",\n        className: classes\n      }, rest), children);\n    }\n\n    if (!childrenUtils.isNil(content)) {\n      return /*#__PURE__*/React.createElement(ElementType, _extends({\n        role: \"list\",\n        className: classes\n      }, rest), content);\n    }\n\n    return /*#__PURE__*/React.createElement(ElementType, _extends({\n      role: \"list\",\n      className: classes\n    }, rest), _map(items, function (item) {\n      return ListItem.create(item, {\n        overrideProps: _this2.handleItemOverrides\n      });\n    }));\n  };\n\n  return List;\n}(Component);\n\nList.handledProps = [\"animated\", \"as\", \"bulleted\", \"celled\", \"children\", \"className\", \"content\", \"divided\", \"floated\", \"horizontal\", \"inverted\", \"items\", \"link\", \"onItemClick\", \"ordered\", \"relaxed\", \"selection\", \"size\", \"verticalAlign\"];\nList.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A list can animate to set the current item apart from the list. */\n  animated: PropTypes.bool,\n\n  /** A list can mark items with a bullet. */\n  bulleted: PropTypes.bool,\n\n  /** A list can divide its items into cells. */\n  celled: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A list can show divisions between content. */\n  divided: PropTypes.bool,\n\n  /** An list can be floated left or right. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n\n  /** A list can be formatted to have items appear horizontally. */\n  horizontal: PropTypes.bool,\n\n  /** A list can be inverted to appear on a dark background. */\n  inverted: PropTypes.bool,\n\n  /** Shorthand array of props for ListItem. */\n  items: customPropTypes.collectionShorthand,\n\n  /** A list can be specially formatted for navigation links. */\n  link: PropTypes.bool,\n\n  /**\n   * onClick handler for ListItem. Mutually exclusive with children.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All item props.\n   */\n  onItemClick: customPropTypes.every([customPropTypes.disallow(['children']), PropTypes.func]),\n\n  /** A list can be ordered numerically. */\n  ordered: PropTypes.bool,\n\n  /** A list can relax its padding to provide more negative space. */\n  relaxed: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['very'])]),\n\n  /** A selection list formats list items as possible choices. */\n  selection: PropTypes.bool,\n\n  /** A list can vary in size. */\n  size: PropTypes.oneOf(SUI.SIZES),\n\n  /** An element inside a list can be vertically aligned. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS)\n} : {};\nList.Content = ListContent;\nList.Description = ListDescription;\nList.Header = ListHeader;\nList.Icon = ListIcon;\nList.Item = ListItem;\nList.List = ListList;\nexport default List;","import * as React from \"react\";\nimport { GatsbyLinkProps } from \"gatsby-link\";\nimport { Card, List } from \"semantic-ui-react\";\nimport { MarkdownRemarkGroupConnection } from \"../../graphql-types\";\n\ninterface TagsCardProps extends React.HTMLProps<HTMLDivElement> {\n  tags: MarkdownRemarkGroupConnection[];\n  Link: React.ComponentClass<GatsbyLinkProps<any>>;\n  tag?: string;\n}\n\nexport default (props: TagsCardProps) => {\n  return (\n    <Card>\n      <Card.Content>\n        <Card.Header>\n          Tags\n        </Card.Header>\n      </Card.Content>\n      <Card.Content>\n        <List>\n          {props.tags.map((tag) => {\n            const isActive = tag.fieldValue === props.tag;\n            const activeStyle = {\n              fontWeight: \"700\",\n            };\n            const tagLink = `/tags/${tag.fieldValue}/`;\n            return (\n              <List.Item as=\"span\" key={tag.fieldValue}>\n                <List.Icon name=\"tag\" color={isActive ? \"blue\" : null} />\n                <List.Content style={isActive ? activeStyle : null}>\n                  <props.Link to={tagLink}>\n                    {tag.fieldValue} ({tag.totalCount})\n                  </props.Link>\n                </List.Content>\n              </List.Item>\n            );\n          })}\n        </List>\n      </Card.Content>\n    </Card>\n  );\n};\n","import baseTimes from './_baseTimes.js';\nimport castFunction from './_castFunction.js';\nimport toInteger from './toInteger.js';\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used as references for the maximum length and index of an array. */\nvar MAX_ARRAY_LENGTH = 4294967295;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min;\n\n/**\n * Invokes the iteratee `n` times, returning an array of the results of\n * each invocation. The iteratee is invoked with one argument; (index).\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n * @example\n *\n * _.times(3, String);\n * // => ['0', '1', '2']\n *\n *  _.times(4, _.constant(0));\n * // => [0, 0, 0, 0]\n */\nfunction times(n, iteratee) {\n  n = toInteger(n);\n  if (n < 1 || n > MAX_SAFE_INTEGER) {\n    return [];\n  }\n  var index = MAX_ARRAY_LENGTH,\n      length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n  iteratee = castFunction(iteratee);\n  n -= MAX_ARRAY_LENGTH;\n\n  var result = baseTimes(length, iteratee);\n  while (++index < n) {\n    iteratee(index);\n  }\n  return result;\n}\n\nexport default times;\n","import * as React from \"react\";\nimport { GatsbyLinkProps } from \"gatsby-link\";\nimport { Menu } from \"semantic-ui-react\";\nimport { times } from \"lodash-es\";\n\ninterface BlogPaginationProps extends React.HTMLProps<HTMLDivElement> {\n  pathname: string;\n  Link: React.ComponentClass<GatsbyLinkProps<any>>;\n  pageCount: number;\n}\n\nexport default (props: BlogPaginationProps) => {\n  if (props.pageCount === 1) { return null; }\n  const activeItem = props.pathname.startsWith(\"/page/\")\n    ? props.pathname.split(\"/\")[3]\n    : \"1\";\n\n  return (\n    <Menu pagination>\n      {times(props.pageCount, (index) => {\n        const pageIndex = (index + 1).toString();\n\n        const rangeStep = props.pageCount < 10 ? 5 : 3;\n        const isInRange = (+pageIndex - rangeStep < +activeItem && +pageIndex + rangeStep > +activeItem);\n        const isLastPage = (+pageIndex === props.pageCount);\n        const isFirstPage = (+pageIndex === 1);\n        if (isInRange || isFirstPage || isLastPage) {\n          return (\n            <Menu.Item\n              key={pageIndex}\n              style={{ cursor: \"pointer\" }}\n              as={props.Link}\n              to={`/page/${pageIndex}/`}\n              name={pageIndex}\n              active={activeItem === pageIndex}\n            />\n          );\n        } else {\n          return (+pageIndex === props.pageCount - 1 || +pageIndex === 2)\n            ? <Menu.Item key={pageIndex} disabled>...</Menu.Item>\n            : null;\n        }\n      })}\n    </Menu>\n  );\n};\n","import * as React from \"react\";\nimport { Link } from \"gatsby\";\nimport { StaticQuery, graphql } from \"gatsby\";\nimport { Header, Grid, Card, List, Container, Feed, Segment, Comment } from \"semantic-ui-react\";\nimport { MarkdownRemarkConnection, ImageSharp } from \"../graphql-types\";\nimport PostHeader from \"../components/PostHeader\";\nimport TagsCard from \"../components/TagsCard/TagsCard\";\nimport BlogPagination from \"../components/BlogPagination/BlogPagination\";\nimport { get } from \"lodash-es\";\nimport {withLayout, LayoutProps} from \"../components/Layout\";\nimport { MarkdownRemark } from \"../graphql-types\";\n\ninterface BlogProps extends LayoutProps {\n  data: {\n    tags: MarkdownRemarkConnection;\n    posts: MarkdownRemarkConnection;\n  };\n  pageContext: {\n    tag?: string; // only set into `templates/tags-pages.tsx`\n  };\n}\n\nconst BlogPage = (props: BlogProps) => {\n  const tags = props.data.tags.group.sort((a, b) => b.totalCount - a.totalCount);\n  const posts = props.data.posts.edges;\n  const { pathname } = props.location;\n  const pageCount = Math.ceil(props.data.posts.totalCount / 10);\n\n  // TODO export posts in a proper component\n  const Posts = (\n    <Container>\n      {posts.map(({ node }: {node: MarkdownRemark}) => {\n        const { frontmatter, timeToRead, fields: { slug }, excerpt } = node;\n        const avatar = frontmatter.author.avatar.children[0] as ImageSharp;\n        const cover = get(frontmatter, \"image.children.0.fixed\", {});\n\n        const extra = (\n          <Comment.Group>\n            <Comment>\n              <Comment.Avatar\n                src={avatar.fixed.src}\n                srcSet={avatar.fixed.srcSet}\n              />\n              <Comment.Content>\n                <Comment.Author style={{ fontWeight: 400 }}>\n                  {frontmatter.author.jsonId}\n                </Comment.Author>\n                <Comment.Metadata style={{ margin: 0 }}>\n                  {frontmatter.updatedDate} - {timeToRead} min read\n              </Comment.Metadata>\n              </Comment.Content>\n            </Comment>\n          </Comment.Group>\n        );\n\n        const description = (\n          <Card.Description>\n            {excerpt}\n            <br />\n            <Link to={slug}>Read more…</Link>\n          </Card.Description>\n        );\n\n        return (\n          <Card key={slug}\n            fluid\n            image={cover}\n            header={frontmatter.title}\n            extra={extra}\n            description={description}\n          />\n        );\n      })}\n    </Container>\n  );\n\n  return (\n    <Container>\n      {/* Title */}\n      <PostHeader />\n\n      {/* Content */}\n      <Segment vertical>\n        <Grid padded style={{ justifyContent: \"space-around\" }}>\n          <div style={{ maxWidth: 600 }}>\n            {Posts}\n            <Segment vertical textAlign=\"center\">\n              <BlogPagination Link={Link} pathname={pathname} pageCount={pageCount} />\n            </Segment>\n          </div>\n          <div>\n            <TagsCard Link={Link} tags={tags} tag={props.pageContext.tag} />\n          </div>\n        </Grid>\n      </Segment>\n    </Container>\n  );\n};\n\nexport default withLayout(BlogPage);\n\nexport const pageQuery = graphql`\nquery PageBlog {\n  # Get tags\n  tags: allMarkdownRemark(filter: {frontmatter: {draft: {ne: true}}}) {\n    group(field: frontmatter___tags) {\n      fieldValue\n      totalCount\n    }\n  }\n\n  # Get posts\n  posts: allMarkdownRemark(\n    sort: { order: DESC, fields: [frontmatter___updatedDate] },\n    filter: {\n      frontmatter: { draft: { ne: true } },\n      fileAbsolutePath: { regex: \"/posts/\" }\n    },\n    limit: 10\n  ) {\n    totalCount\n    edges {\n      node {\n        excerpt\n        timeToRead\n        fields {\n          slug\n        }\n        frontmatter {\n          title\n          updatedDate(formatString: \"DD MMMM, YYYY\")\n          image {\n          \tchildren {\n              ... on ImageSharp {\n                fixed(width: 700, height: 100) {\n                  src\n                  srcSet\n                }\n              }\n            }\n          }\n          author {\n            jsonId\n            avatar {\n              children {\n                ... on ImageSharp {\n                  fixed(width: 35, height: 35) {\n                    src\n                    srcSet\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n`;\n"],"names":["React","Segment","vertical","Header","as","Content","ListDescription","props","children","className","content","classes","rest","getUnhandledProps","ElementType","getElementType","childrenUtils","handledProps","propTypes","create","ListHeader","ListContent","description","floated","header","verticalAlign","ListIcon","Icon","name","ListItem","_Component","_this","_len","arguments","length","args","Array","_key","call","apply","this","concat","handleClick","e","disabled","prototype","render","_this$props","active","icon","image","value","valueProp","role","onClick","iconElement","autoGenerateKey","imageElement","Image","isValidElement","defaultProps","headerElement","descriptionElement","Component","ListList","List","handleItemOverrides","predefinedProps","itemProps","_this2","animated","bulleted","celled","divided","horizontal","inverted","items","link","ordered","relaxed","selection","size","item","overrideProps","Description","Item","Card","tags","map","tag","isActive","fieldValue","tagLink","key","color","style","fontWeight","Link","to","totalCount","MAX_ARRAY_LENGTH","nativeMin","Math","min","n","iteratee","toInteger","index","result","pageCount","activeItem","pathname","startsWith","split","Menu","pagination","_times","pageIndex","toString","rangeStep","isInRange","isLastPage","cursor","withLayout","data","group","sort","a","b","posts","edges","location","ceil","Posts","Container","_ref","node","frontmatter","timeToRead","fields","slug","excerpt","avatar","author","cover","_get","extra","Comment","Group","Avatar","src","fixed","srcSet","Author","jsonId","Metadata","margin","updatedDate","fluid","title","PostHeader","Grid","padded","justifyContent","maxWidth","textAlign","BlogPagination","TagsCard","pageContext"],"sourceRoot":""}