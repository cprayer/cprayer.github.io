{"version":3,"file":"component---src-templates-blog-post-tsx-ef54331f84bd54161f94.js","mappings":"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","sources":["webpack://cprayer-blog/./node_modules/semantic-ui-react/dist/es/views/Item/ItemHeader.js","webpack://cprayer-blog/./node_modules/semantic-ui-react/dist/es/views/Item/ItemDescription.js","webpack://cprayer-blog/./node_modules/semantic-ui-react/dist/es/views/Item/ItemExtra.js","webpack://cprayer-blog/./node_modules/semantic-ui-react/dist/es/views/Item/ItemMeta.js","webpack://cprayer-blog/./node_modules/semantic-ui-react/dist/es/views/Item/ItemContent.js","webpack://cprayer-blog/./node_modules/semantic-ui-react/dist/es/views/Item/ItemGroup.js","webpack://cprayer-blog/./node_modules/semantic-ui-react/dist/es/views/Item/ItemImage.js","webpack://cprayer-blog/./node_modules/semantic-ui-react/dist/es/views/Item/Item.js","webpack://cprayer-blog/./src/components/Comments.tsx","webpack://cprayer-blog/./src/templates/blog-post.tsx"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * An item can contain a header.\n */\n\nfunction ItemHeader(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('header', className);\n  var rest = getUnhandledProps(ItemHeader, props);\n  var ElementType = getElementType(ItemHeader, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nItemHeader.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nItemHeader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nItemHeader.create = createShorthandFactory(ItemHeader, function (content) {\n  return {\n    content: content\n  };\n});\nexport default ItemHeader;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * An item can contain a description with a single or multiple paragraphs.\n */\n\nfunction ItemDescription(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('description', className);\n  var rest = getUnhandledProps(ItemDescription, props);\n  var ElementType = getElementType(ItemDescription, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nItemDescription.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nItemDescription.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nItemDescription.create = createShorthandFactory(ItemDescription, function (content) {\n  return {\n    content: content\n  };\n});\nexport default ItemDescription;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * An item can contain extra content meant to be formatted separately from the main content.\n */\n\nfunction ItemExtra(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('extra', className);\n  var rest = getUnhandledProps(ItemExtra, props);\n  var ElementType = getElementType(ItemExtra, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nItemExtra.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nItemExtra.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nItemExtra.create = createShorthandFactory(ItemExtra, function (content) {\n  return {\n    content: content\n  };\n});\nexport default ItemExtra;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * An item can contain content metadata.\n */\n\nfunction ItemMeta(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('meta', className);\n  var rest = getUnhandledProps(ItemMeta, props);\n  var ElementType = getElementType(ItemMeta, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nItemMeta.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nItemMeta.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nItemMeta.create = createShorthandFactory(ItemMeta, function (content) {\n  return {\n    content: content\n  };\n});\nexport default ItemMeta;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useVerticalAlignProp } from '../../lib';\nimport ItemHeader from './ItemHeader';\nimport ItemDescription from './ItemDescription';\nimport ItemExtra from './ItemExtra';\nimport ItemMeta from './ItemMeta';\n/**\n * An item can contain content.\n */\n\nfunction ItemContent(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      description = props.description,\n      extra = props.extra,\n      header = props.header,\n      meta = props.meta,\n      verticalAlign = props.verticalAlign;\n  var classes = cx(useVerticalAlignProp(verticalAlign), 'content', className);\n  var rest = getUnhandledProps(ItemContent, props);\n  var ElementType = getElementType(ItemContent, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), ItemHeader.create(header, {\n    autoGenerateKey: false\n  }), ItemMeta.create(meta, {\n    autoGenerateKey: false\n  }), ItemDescription.create(description, {\n    autoGenerateKey: false\n  }), ItemExtra.create(extra, {\n    autoGenerateKey: false\n  }), content);\n}\n\nItemContent.handledProps = [\"as\", \"children\", \"className\", \"content\", \"description\", \"extra\", \"header\", \"meta\", \"verticalAlign\"];\nItemContent.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Shorthand for ItemDescription component. */\n  description: customPropTypes.itemShorthand,\n\n  /** Shorthand for ItemExtra component. */\n  extra: customPropTypes.itemShorthand,\n\n  /** Shorthand for ItemHeader component. */\n  header: customPropTypes.itemShorthand,\n\n  /** Shorthand for ItemMeta component. */\n  meta: customPropTypes.itemShorthand,\n\n  /** Content can specify its vertical alignment. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS)\n} : {};\nexport default ItemContent;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _map from \"lodash-es/map\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, useKeyOnly, useKeyOrValueAndKey } from '../../lib';\nimport Item from './Item';\n/**\n * A group of items.\n */\n\nfunction ItemGroup(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      divided = props.divided,\n      items = props.items,\n      link = props.link,\n      relaxed = props.relaxed,\n      unstackable = props.unstackable;\n  var classes = cx('ui', useKeyOnly(divided, 'divided'), useKeyOnly(link, 'link'), useKeyOnly(unstackable, 'unstackable'), useKeyOrValueAndKey(relaxed, 'relaxed'), 'items', className);\n  var rest = getUnhandledProps(ItemGroup, props);\n  var ElementType = getElementType(ItemGroup, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  if (!childrenUtils.isNil(content)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), content);\n  }\n\n  var itemsJSX = _map(items, function (item) {\n    var childKey = item.childKey,\n        itemProps = _objectWithoutPropertiesLoose(item, [\"childKey\"]);\n\n    var finalKey = childKey != null ? childKey : [itemProps.content, itemProps.description, itemProps.header, itemProps.meta].join('-');\n    return /*#__PURE__*/React.createElement(Item, _extends({}, itemProps, {\n      key: finalKey\n    }));\n  });\n\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), itemsJSX);\n}\n\nItemGroup.handledProps = [\"as\", \"children\", \"className\", \"content\", \"divided\", \"items\", \"link\", \"relaxed\", \"unstackable\"];\nItemGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Items can be divided to better distinguish between grouped content. */\n  divided: PropTypes.bool,\n\n  /** Shorthand array of props for Item. */\n  items: customPropTypes.collectionShorthand,\n\n  /** An item can be formatted so that the entire contents link to another page. */\n  link: PropTypes.bool,\n\n  /** A group of items can relax its padding to provide more negative space. */\n  relaxed: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['very'])]),\n\n  /** Prevent items from stacking on mobile. */\n  unstackable: PropTypes.bool\n} : {};\nexport default ItemGroup;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport { createShorthandFactory, getUnhandledProps } from '../../lib';\nimport Image from '../../elements/Image';\n/**\n * An item can contain an image.\n */\n\nfunction ItemImage(props) {\n  var size = props.size;\n  var rest = getUnhandledProps(ItemImage, props);\n  return /*#__PURE__*/React.createElement(Image, _extends({}, rest, {\n    size: size,\n    ui: !!size,\n    wrapped: true\n  }));\n}\n\nItemImage.handledProps = [\"size\"];\nItemImage.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An image may appear at different sizes. */\n  size: Image.propTypes.size\n} : {};\nItemImage.create = createShorthandFactory(ItemImage, function (src) {\n  return {\n    src: src\n  };\n});\nexport default ItemImage;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\nimport ItemContent from './ItemContent';\nimport ItemDescription from './ItemDescription';\nimport ItemExtra from './ItemExtra';\nimport ItemGroup from './ItemGroup';\nimport ItemHeader from './ItemHeader';\nimport ItemImage from './ItemImage';\nimport ItemMeta from './ItemMeta';\n/**\n * An item view presents large collections of site content for display.\n */\n\nfunction Item(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      description = props.description,\n      extra = props.extra,\n      header = props.header,\n      image = props.image,\n      meta = props.meta;\n  var classes = cx('item', className);\n  var rest = getUnhandledProps(Item, props);\n  var ElementType = getElementType(Item, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), ItemImage.create(image, {\n    autoGenerateKey: false\n  }), /*#__PURE__*/React.createElement(ItemContent, {\n    content: content,\n    description: description,\n    extra: extra,\n    header: header,\n    meta: meta\n  }));\n}\n\nItem.handledProps = [\"as\", \"children\", \"className\", \"content\", \"description\", \"extra\", \"header\", \"image\", \"meta\"];\nItem.Content = ItemContent;\nItem.Description = ItemDescription;\nItem.Extra = ItemExtra;\nItem.Group = ItemGroup;\nItem.Header = ItemHeader;\nItem.Image = ItemImage;\nItem.Meta = ItemMeta;\nItem.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for ItemContent component. */\n  content: customPropTypes.contentShorthand,\n\n  /** Shorthand for ItemDescription component. */\n  description: customPropTypes.itemShorthand,\n\n  /** Shorthand for ItemExtra component. */\n  extra: customPropTypes.itemShorthand,\n\n  /** Shorthand for ItemHeader component. */\n  header: customPropTypes.itemShorthand,\n\n  /** Shorthand for ItemImage component. */\n  image: customPropTypes.itemShorthand,\n\n  /** Shorthand for ItemMeta component. */\n  meta: customPropTypes.itemShorthand\n} : {};\nexport default Item;","import React, { createRef, useLayoutEffect } from \"react\";\n\nexport const Comments: React.FC<{}> = React.memo(() => {\n  const divRef = createRef<HTMLDivElement>();\n\n  useLayoutEffect(() => {\n    const script = document.createElement(\"script\");\n\n    const attributes = {\n      \"async\": \"true\",\n      \"crossOrigin\": \"anonymous\",\n      \"issue-term\": \"pathname\",\n      \"label\": \"comment\",\n      \"repo\": \"cprayer/cprayer.github.io\",\n      \"src\": \"https://utteranc.es/client.js\",\n      \"theme\": \"github-light\",\n    };\n\n    for (const [key, value] of Object.entries(attributes)) {\n      script.setAttribute(key, value);\n    }\n\n    divRef.current.appendChild(script);\n  });\n\n  return <div ref={divRef} />;\n});\n","import * as React from \"react\";\nimport { Link } from \"gatsby\";\nimport { get } from \"lodash-es\";\nimport { Header, Container, Segment, Label, Grid, Card, Image, Item, Comment } from \"semantic-ui-react\";\nimport { MarkdownRemark, ImageSharp, MarkdownRemarkConnection, Site } from \"../graphql-types\";\nimport {withLayout, LayoutProps} from \"../components/Layout\";\nimport { Comments } from \"../components/Comments\";\nimport { graphql } from \"gatsby\";\n\ninterface BlogPostProps extends LayoutProps {\n  data: {\n    post: MarkdownRemark;\n    recents: MarkdownRemarkConnection;\n    site: Site\n  };\n}\n\nconst BlogPostPage = (props: BlogPostProps) => {\n  const { frontmatter, html, timeToRead } = props.data.post;\n  const avatar = frontmatter.author.avatar.children[0] as ImageSharp;\n\n  const tags = props.data.post.frontmatter.tags\n    .map((tag) => <Label key={tag}><Link to={`/tags/${tag}/`}>{tag}</Link></Label>);\n\n  const recents = props.data.recents.edges\n    .map(({ node }) => {\n      const recentCover = get(node, \"frontmatter.image.children.0.fixed\", {});\n      const extra = (\n        <Comment.Group>\n          <Comment>\n            <Comment.Content>\n              <Comment.Metadata style={{ margin: 0 }}>\n                {node.timeToRead} min read\n              </Comment.Metadata>\n            </Comment.Content>\n          </Comment>\n        </Comment.Group>\n      );\n\n      return (\n        <div key={node.fields.slug} style={{ paddingBottom: \"1em\", wordBreak: \"break-all\" }}>\n          <Card as={Link}\n            to={node.fields.slug}\n            image={recentCover}\n            header={node.frontmatter.title}\n            extra={extra}\n          />\n        </div>\n      );\n    });\n\n  const cover = get(frontmatter, \"image.children.0.fixed\", {} );\n  return (\n    <Container>\n      <Segment vertical style={{ border: \"none\" }}>\n        <Item.Group>\n          <Item>\n            <Item.Image size=\"tiny\"\n              src={avatar.fixed.src}\n              srcSet={avatar.fixed.srcSet}\n              circular\n            />\n            <Item.Content>\n              <Item.Description>{frontmatter.author.jsonId}</Item.Description>\n              <Item.Meta>{frontmatter.author.bio}</Item.Meta>\n              <Item.Extra>{frontmatter.updatedDate} - {timeToRead} min read</Item.Extra>\n            </Item.Content>\n          </Item>\n        </Item.Group>\n        <Header as=\"h1\">{frontmatter.title}</Header>\n      </Segment>\n      <Image\n        {...cover}\n        fluid\n      />\n      <Segment vertical\n        style={{ border: \"none\" }}\n        dangerouslySetInnerHTML={{\n          __html: html,\n        }}\n        size=\"large\"\n      />\n      <Segment vertical>\n        {tags}\n      </Segment>\n      <Comments/>\n      <Segment vertical>\n        <Grid padded centered>\n          {recents}\n        </Grid>\n      </Segment>\n    </Container>\n  );\n};\n\nexport default withLayout(BlogPostPage);\n\nexport const pageQuery = graphql`\n  query TemplateBlogPost($slug: String!) {\n  post: markdownRemark(fields: {slug: {eq: $slug}}) {\n    html\n    excerpt\n    timeToRead\n    fields {\n      slug\n    }\n    frontmatter {\n      tags\n      author {\n        jsonId\n        bio\n        twitter\n        avatar {\n          children {\n            ... on ImageSharp {\n              fixed(width: 80, height: 80, quality: 100) {\n                src\n                srcSet\n              }\n            }\n          }\n        }\n      }\n      title\n      updatedDate(formatString: \"MMM D, YYYY\")\n      image {\n        children {\n          ... on ImageSharp {\n            fixed(width: 900, height: 300, quality: 100) {\n              src\n              srcSet\n            }\n          }\n        }\n      }\n    }\n  }\n  recents: allMarkdownRemark(\n    filter: {\n      fields: {slug: {ne: $slug}}\n      frontmatter: {draft: {ne: true}},\n      fileAbsolutePath: {regex: \"/posts/\"},\n    },\n    sort: {order: DESC, fields: [frontmatter___updatedDate]},\n    limit: 4\n  ) {\n    edges {\n      node {\n        fields {\n          slug\n        }\n        timeToRead\n        frontmatter {\n          title\n          image {\n            children {\n              ... on ImageSharp {\n                fixed(width: 300, height: 100) {\n                  src\n                  srcSet\n                }\n              }\n            }\n          }\n          author {\n            jsonId\n            avatar {\n              children {\n                ... on ImageSharp {\n                  fixed(width: 36, height: 36) {\n                    src\n                    srcSet\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n`;\n"],"names":["ItemHeader","props","children","className","content","classes","rest","getUnhandledProps","ElementType","getElementType","childrenUtils","handledProps","propTypes","create","ItemDescription","ItemExtra","ItemMeta","ItemContent","description","extra","header","meta","verticalAlign","autoGenerateKey","ItemGroup","divided","items","link","relaxed","unstackable","itemsJSX","item","childKey","itemProps","finalKey","join","key","ItemImage","size","Image","ui","wrapped","src","Item","image","Content","Description","Extra","Group","Header","Meta","Comments","React","divRef","createRef","useLayoutEffect","script","document","createElement","attributes","value","Object","entries","setAttribute","current","appendChild","ref","withLayout","frontmatter","html","timeToRead","data","post","avatar","author","tags","map","tag","Label","Link","to","recents","edges","_ref","node","recentCover","_get","Comment","Metadata","style","margin","fields","slug","paddingBottom","wordBreak","Card","as","title","cover","Container","Segment","vertical","border","fixed","srcSet","circular","jsonId","bio","updatedDate","assign","fluid","dangerouslySetInnerHTML","__html","Grid","padded","centered"],"sourceRoot":""}